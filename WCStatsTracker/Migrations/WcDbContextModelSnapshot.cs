// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WCStatsTracker.Services.DataAccess;

#nullable disable

namespace WCStatsTracker.Migrations
{
    [DbContext(typeof(WcDbContext))]
    partial class WcDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("AbilityWcRun", b =>
                {
                    b.Property<int>("RunsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartingAbilitiesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RunsId", "StartingAbilitiesId");

                    b.HasIndex("StartingAbilitiesId");

                    b.ToTable("AbilityWcRun");
                });

            modelBuilder.Entity("CharacterWcRun", b =>
                {
                    b.Property<int>("RunsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartingCharactersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RunsId", "StartingCharactersId");

                    b.HasIndex("StartingCharactersId");

                    b.ToTable("CharacterWcRun");
                });

            modelBuilder.Entity("WCStatsTracker.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AbilitiesProtected");

                    b.HasData(
                        new
                        {
                            Id = 21,
                            Name = "Blitz"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Capture"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Control"
                        },
                        new
                        {
                            Id = 3,
                            Name = "GP Rain"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dance"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Jump"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Lore"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Morph"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Rage"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Runic"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Sketch"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Slot"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Steal"
                        },
                        new
                        {
                            Id = 14,
                            Name = "SwdTech"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Throw"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Tools"
                        },
                        new
                        {
                            Id = 17,
                            Name = "X Magic"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Shock"
                        },
                        new
                        {
                            Id = 19,
                            Name = "MagiTek"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Possess"
                        });
                });

            modelBuilder.Entity("WCStatsTracker.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CharactersProtected");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Terra"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Locke"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cyan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Shadow"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Edgar"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sabin"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Celes"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Strage"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Relm"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Setzer"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Mog"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Gau"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Gogo"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Umaro"
                        });
                });

            modelBuilder.Entity("WCStatsTracker.Models.Flag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FlagString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Flags");
                });

            modelBuilder.Entity("WCStatsTracker.Models.WcRun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BossesKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharactersFound")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChecksDone")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChestsOpened")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateRan")
                        .HasColumnType("TEXT");

                    b.Property<bool>("DidKTSkip")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DragonsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EspersFound")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlagId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("RunLength")
                        .HasColumnType("TEXT");

                    b.Property<string>("Seed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlagId");

                    b.ToTable("WCRuns");
                });

            modelBuilder.Entity("AbilityWcRun", b =>
                {
                    b.HasOne("WCStatsTracker.Models.WcRun", null)
                        .WithMany()
                        .HasForeignKey("RunsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WCStatsTracker.Models.Ability", null)
                        .WithMany()
                        .HasForeignKey("StartingAbilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharacterWcRun", b =>
                {
                    b.HasOne("WCStatsTracker.Models.WcRun", null)
                        .WithMany()
                        .HasForeignKey("RunsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WCStatsTracker.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("StartingCharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WCStatsTracker.Models.WcRun", b =>
                {
                    b.HasOne("WCStatsTracker.Models.Flag", "Flag")
                        .WithMany("Runs")
                        .HasForeignKey("FlagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flag");
                });

            modelBuilder.Entity("WCStatsTracker.Models.Flag", b =>
                {
                    b.Navigation("Runs");
                });
#pragma warning restore 612, 618
        }
    }
}
